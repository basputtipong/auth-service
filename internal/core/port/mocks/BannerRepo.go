// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	port "auth-service/internal/core/port"

	mock "github.com/stretchr/testify/mock"
)

// BannerRepo is an autogenerated mock type for the BannerRepo type
type BannerRepo struct {
	mock.Mock
}

// GetByUserId provides a mock function with given fields: userId
func (_m *BannerRepo) GetByUserId(userId string) (port.Banner, error) {
	ret := _m.Called(userId)

	if len(ret) == 0 {
		panic("no return value specified for GetByUserId")
	}

	var r0 port.Banner
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (port.Banner, error)); ok {
		return rf(userId)
	}
	if rf, ok := ret.Get(0).(func(string) port.Banner); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Get(0).(port.Banner)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewBannerRepo creates a new instance of BannerRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBannerRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *BannerRepo {
	mock := &BannerRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
